# -*- coding: utf-8 -*-
""" 
subplots_matplot_test01
fun:
	draw multi-pictures 
env:
	Linux ubuntu 4.4.0-31-generic x86_64 GNU;python 2.7;tensorflow1.10.1;Keras2.2.4
	pip2,matplotlib2.2.3
"""
from __future__ import print_function
import matplotlib.pyplot as plt
import numpy as np

mse_per_seq1 = [
6545.728759765625,
538.7624918619791,
562.8577677408854,
574.1641743977865,
613.8622741699219,
614.14111328125,
688.4171346028646,
710.7823486328125,
710.6336263020834,
762.8766479492188,
769.2311808268229
]
mse_per_seq2 = [
3947.4112294514975,
256.77659606933594,
279.0392557779948,
293.0359293619792,
326.7290344238281,
337.23154703776044,
429.72462972005206,
451.99521891276044,
472.72536214192706,
537.8328145345052,
562.3208414713541
]
mse_per_seq3 = [
2083.704531351725,
146.44320424397787,
156.9576670328776,
159.68402608235678,
184.0944035847982,
175.6923395792643,
244.1362508138021,
244.94959004720053,
243.82522583007812,
259.7784779866536,
268.1433461507161
]
mse_per_seq4 = [
1190.758316040039,
91.12438710530598,
90.1427993774414,
84.42810312906902,
102.04151916503906,
94.36908213297527,
150.09553019205728,
145.55538940429688,
141.79388682047525,
149.61124674479166,
141.59637196858725
]
mse_per_seq5 = [
836.6925659179688,
59.798821767171226,
60.73206329345703,
56.96993509928385,
70.62945810953777,
66.02258936564128,
102.06669362386067,
104.88714090983073,
102.62906646728516,
109.50108846028645,
103.45570882161458
]
mse_per_seq6 = [
672.829288482666,
53.131890614827476,
50.15827941894531,
44.464892069498696,
58.309017181396484,
55.19628779093424,
84.91250101725261,
84.16267903645833,
76.88805898030598,
84.33331934611003,
81.27236302693684
]

ssim1 = [
 0.73694956,
 0.75985575,
 0.75066227,
 0.7561497,
 0.7457526,
 0.7447748,
 0.7296993,
 0.7251415,
 0.72647566,
 0.7153228,
 0.7156612
]
ssim2 = [
 0.8160551,
 0.8481097,
 0.8388114,
 0.8370748,
 0.8311592,
 0.82937354,
 0.8071573,
 0.8024587,
 0.798682,
 0.7861407,
 0.7815838
]
ssim3 = [
 0.8606906,
 0.874006,
 0.871133,
 0.8702004,
 0.86604255,
 0.87082356,
 0.8526171,
 0.8515442,
 0.8520023,
 0.8494255,
 0.8491113
]
ssim4 = [
 0.92676735,
 0.9317027,
 0.9293473,
 0.93058425,
 0.9307229,
 0.9325908,
 0.9223438,
 0.9208593,
 0.9230806,
 0.92237186,
 0.92137186
]
ssim5 = [
 0.94819754,
 0.9497321,
 0.950733,
 0.95420855,
 0.95128846,
 0.9516459,
 0.94399786,
 0.94254583,
 0.9468029,
 0.9436047,
 0.9474159
]
ssim6 = [
 0.95612764,
 0.9577567,
 0.9588892,
 0.9626997,
 0.95913166,
 0.9598603,
 0.9516201,
 0.9504271,
 0.95487696,
 0.95114475,
 0.9548704
]

 
if __name__ == '__main__' :
    #print('ssim6',ssim6)
    #print('mse_per_seq6',mse_per_seq6)
    #for index,val in enumerate(ssim6):
    #   print('index',index)
    #print (ssim6.index)
    fig = plt.figure("expermenets",figsize=(10,4))
    #plt.suptitle("Comparisons of different models on test set.")  # 图片名称
    plt.subplot(1,2,1)
    plt.plot(mse_per_seq1, 'bo-',
             mse_per_seq2, 'go-',
             mse_per_seq3, 'ro-',
             mse_per_seq4, 'co-',
             mse_per_seq5, 'yo-',
             mse_per_seq6, 'ko-')
    plt.axis('on')  # 关掉坐标轴为 off
    plt.title('(a) Frame-wise MSE')  # 图像题目
    plt.legend(["mse_per_seq1","mse_per_seq2","mse_per_seq3","mse_per_seq4","mse_per_seq5","mse_per_seq6"],loc='best')
    plt.grid(False)
    plt.xlabel('time steps')
    plt.ylabel('mse_per_seq')
    plt.xticks(np.arange(0, 11, step=2), rotation=0) #xticks>xlim
    plt.yticks(np.arange(0, 8000, step=1000), rotation=0) #yticks>ylim
    plt.xlim(0,10)
    plt.ylim(0, 7000)


    plt.subplot(1,2,2)
    plt.plot(ssim1, 'bo-',
             ssim2, 'go-',
             ssim3, 'ro-',
             ssim4, 'co-',
             ssim5, 'yo-',
             ssim6, 'ko-',)
    plt.axis('on')  # 关掉坐标轴为 off
    plt.title('(b) Frame-wise SSIM')  # 图像题目
    plt.legend(["SSIM1","SSIM2","SSIM3","SSIM4","SSIM5","SSIM6"],loc='lower right')
    plt.xlabel('time steps')
    plt.ylabel('SSIM')
    plt.xticks(np.arange(0, 11, step=2),rotation=0)
    plt.yticks(np.arange(0.4, 1.1, step=0.1), rotation=0)
    plt.xlim(0,10)
    plt.ylim(0.4, 1)

    plt.savefig("result.jpg")
    plt.show()


